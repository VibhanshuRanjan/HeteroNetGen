#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jun 18 21:11:45 2022

@author: saikat
"""

import yaml
import pandas as pd
import dgl
from dgl.base import dgl_warning
import ast
import numpy as np

with open('/home/saikat/OpenHGNN_test/My_Hetero_net_data_T2DM_dummy/T2DM_hetero_data/meta.yaml') as fh:
    read_data = yaml.load(fh, Loader=yaml.FullLoader)

node_types = []

for i in range(len(read_data['node_data'])):
    node_types.append(read_data['node_data'][i]['ntype'])

edge_type_tuples = []

for i in range(len(read_data['edge_data'])):
    edge_type_tuples.append(tuple(read_data['edge_data'][i]['etype']))


class DefaultDataParser:
    """ Default data parser for CSVDataset. It
        1. ignores any columns which does not have a header.
        2. tries to convert to list of numeric values(generated by
            np.array().tolist()) if cell data is a str separated by ','.
        3. read data and infer data type directly, otherwise.
    """

    def __call__(self, df: pd.DataFrame):
        data = {}
        for header in df:
            if 'Unnamed' in header:
                dgl_warning("Unamed column is found. Ignored...")
                continue
            dt = df[header].to_numpy().squeeze()
            if dt.size > 0 and isinstance(dt[0], str):
                # probably consists of list of numeric values
                dt = np.array([ast.literal_eval(row) for row in dt])
            data[header] = dt
        return data


dataset = dgl.data.CSVDataset('./T2DM_hetero_data',
                              ndata_parser={k: DefaultDataParser()
                                            for k in node_types},
                              edata_parser={j: DefaultDataParser()
                                            for j in edge_type_tuples},
                              gdata_parser=None)

g = dataset[0]  # DGL Heterograph
